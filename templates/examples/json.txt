//

Entry :: struct {
  key: string,
  value: Value,
}

Object :: map[string]Value
Array :: []Value
Null :: struct{}
Value :: union #no_nil { Object, Array, string, int, bool, Null }

Values :: [dynamic]Value

//

json // Value //
 -> value              // this = _0 //
;
value // Value //
 -> object             // this = _0       //
 -> array              // this = _0       //
 -> string             // this = "string" //
 -> number             // this = 69       //
 -> "true"             // this = true     //
 -> "false"            // this = false    //
 -> "null"             // this = Null{}   //
;
object // Object //
 -> "{" "}"            // this = Object{} //
 -> "{" members "}"    // this = _1       //
;
members // Object //
 ->             member // this = make(Object); this[_0.key] = _0.value //
 -> members "," member // this = _0;           this[_2.key] = _2.value //
;
member // Entry //
 -> string ":" value   // this = Entry{ "string", _2 } //
;
array // Array //
 -> "[" "]"            // this = Array{} //
 -> "[" values "]"     // this = _1[:]   //
;
values // Values //
 ->            value   // this = make(Values); append(&this, _0) //
 -> values "," value   // this = _0;           append(&this, _2) //
;
